#include <FreqCount.h>

int pinA = 2;
int pinB = 3;
int pinC = 4;
int pinD = 5;
int pinE = 6;
int pinF = 7;
int pinG = 8;
int D1 = 12;
int D2 = 11;
int D3 = 10;
int D4 = 9;

int digits[4] = {D1, D2, D3, D4}; // Array for digit control pins
int number[10][7] = {             // Segment values for 0-9
    {HIGH, HIGH, HIGH, HIGH, HIGH, HIGH, LOW}, // 0
    {LOW, HIGH, HIGH, LOW, LOW, LOW, LOW}, // 1
    {HIGH, HIGH, LOW, HIGH, HIGH, LOW, HIGH}, // 2
    {HIGH, HIGH, HIGH, HIGH, LOW, LOW, HIGH}, // 3
    {LOW, HIGH, HIGH, LOW, LOW, HIGH, HIGH}, // 4
    {HIGH, LOW, HIGH, HIGH, LOW, HIGH, HIGH}, // 5
    {HIGH, LOW, HIGH, HIGH, HIGH, HIGH, HIGH}, // 6
    {HIGH, HIGH, HIGH, LOW, LOW, HIGH, LOW}, // 7
    {HIGH, HIGH, HIGH, HIGH, HIGH, HIGH, HIGH}, // 8
    {HIGH, HIGH, HIGH, HIGH, LOW, HIGH, HIGH}  // 9
};

void setup() {
  // Initialize pins as outputs
  pinMode(pinA, OUTPUT);
  pinMode(pinB, OUTPUT);
  pinMode(pinC, OUTPUT);
  pinMode(pinD, OUTPUT);
  pinMode(pinE, OUTPUT);
  pinMode(pinF, OUTPUT);
  pinMode(pinG, OUTPUT);
  pinMode(D1, OUTPUT);
  pinMode(D2, OUTPUT);
  pinMode(D3, OUTPUT);
  pinMode(D4, OUTPUT);

  Serial.begin(9600); // Initialize serial communication
  FreqCount.begin(100);  // Initialize the frequency counter
}

void displayDigit(int digit, int position) {
  // Turn off all digit control pins
  for (int i = 0; i < 4; i++) {
    digitalWrite(digits[i], HIGH);
  }

  // Activate the corresponding digit control pin
  digitalWrite(digits[position], LOW);

  // Set segments for the digit
  for (int i = 0; i < 7; i++) {
    digitalWrite(pinA + i, number[digit][i]);
  }
}

void loop() {
  static int displayNum = 0;  // Stores the 4-digit number to display
  static int index = 0;       // Current digit index (0-3)
  static unsigned long lastUpdate = 0;
  static unsigned long lastReadTime = 0;
  const long readInterval = 500;  // Set the interval for reading the frequency (in milliseconds)

  // Update display every 2ms (multiplexing)
  if (millis() - lastUpdate >= 2) {
    lastUpdate = millis();

    // Extract digit and display it
    int digit = (displayNum / (int)pow(10.02, 3 - index)) % 10;
    displayDigit(digit, index);

    // Move to the next digit
    index = (index + 1) % 4;
  }

  // Read frequency every 500ms
  if (millis() - lastReadTime >= readInterval) {
    lastReadTime = millis();

    // Get frequency count
    long frequency = FreqCount.read();  // Get the frequency count
    if (frequency == 0) {               // If no frequency detected, use 0
      frequency = 0;
    }

    // Prepare frequency as a 4-digit number
    displayNum = frequency;

    // Optionally print the frequency to Serial Monitor for debugging
    Serial.print("Frequency: ");
    Serial.println(frequency);
  }
}
